class Pong {
   field Square rocket1; // the first rocket of this game
   field Square rocket2; // the second rocket of this game
   field Square ball; // the ball of this game
   field int dx; field int dy; // the ball's current direction

   /** Constructs a new Pong Game. */
   constructor Pong new() {
      let rocket1 = Square.new(51, 128, 4, 15);
      let rocket2 = Square.new(456, 128, 4, 15);
      let ball = Square.new(250, 128, 5, 5);
      let dx = -1; let dy = 1;
      return this;
   }

   /** Disposes this game. */
   method void dispose() {
      do rocket1.dispose();
      do rocket2.dispose();
      do ball.dispose();
      do Memory.deAlloc(this);
      return;
   }

   /** Moves the square in the current direction. */
   method void moveRockets(int direction1, int direction2) {
      do rocket1.move(0, direction1);
      do rocket2.move(0, direction2);
      return;
   }

   method boolean moveBall() {
      if (ball.getX() < 55) {
        return true;
      }
      if (ball.getX() > 451) {
        return true;
      }
      if (ball.getY() = 0) {
        let dy = -dy;
      }
      if (ball.getY() = 250) {
        let dy = -dy;
      }
      if (ball.getX() = 51) {
        if (ball.getY() < rocket1.getY() + rocket1.getSizeY() + 1) {
          if (ball.getY() > rocket1.getY() - ball.getSizeY() - 1) {
            let dx = -dx;
          }
        }
      }
      if (ball.getX() = 451) {
        if (ball.getY() < rocket2.getY() + rocket2.getSizeY() + 1) {
          if (ball.getY() > rocket2.getY() - ball.getSizeY() - 1) {
            let dx = -dx;
          }
        }
      }
      do ball.move(dx, dy);
      return false;
   }

   method void displayStart() {
    do rocket1.draw();
    do rocket2.draw();
    do ball.draw();
    do Sys.wait(1000);
    return;
   }

   method void displayEnd() {
    // print the game over message
    do Screen.clearScreen();
    do Output.moveCursor(13, 26);
    do Output.printString("Game Over!");
    return;
   }

   /** Runs the game: handles the user's inputs and moves the square accordingly */
   method void run() {
      var char key;  // the key currently pressed by the user
      var boolean exit, ballDead;
      var int direction1, direction2; // the direction of the rocket movements
      let exit = false;

      let direction1 = 0; let direction2 = 0;

      while (~exit) {
         // waits for a key to be pressed
         let key = Keyboard.keyPressed();
         if (key = 80)  { let exit = true; }     // p key
         if (key = 131) { let direction2 = -1; }   // up arrow
         if (key = 133) { let direction2 = 1; }   // down arrow
         if (key = 87) { let direction1 = -1; }   // w key
         if (key = 83) { let direction1 = 1; }   // s key
         do moveRockets(direction1, direction2);
         let ballDead = moveBall();
         if (ballDead) { let exit = true; }
         do Sys.wait(200);
       } // end of while loop
     return;
   }
}
