class Snake {
  field Point pose;
  field Snake behind;
  field boolean movingPositive, movingVertical;
  field int boardSize;

  constructor Snake new(Point start, int board, Snake previous) {
    let pose = start;
    let behind = previous;
    let boardSize = board;
    let movingPositive = false;
    let movingVertical = false;
    return this;
  }

  method void dispose() {
      do Memory.deAlloc(this);
      return;
  }

  method Snake getPrevious() {
    return behind;
  }

  method Point getPose() {
    return pose;
  }

  method void moveLeft() {
    if (~(behind = null)) { do behind.moveTo(pose); }
    do pose.moveLeft();
    do updateDirection();
    return;
  }

  method void moveRight() {
    if (~(behind = null)) { do behind.moveTo(pose); }
    do pose.moveRight();
    do updateDirection();
    return;
  }

  method void moveDown() {
    if (~(behind = null)) { do behind.moveTo(pose); }
    do pose.moveDown();
    do updateDirection();
    return;
  }

  method void moveUp() {
    if (~(behind = null)) { do behind.moveTo(pose); }
    do pose.moveUp();
    do updateDirection();
    return;
  }

  method void moveTo(Point other) {
  if (~(behind = null)) { do behind.moveTo(pose); }
    do pose.moveTo(other);
    do updateDirection();
    return;
  }

  method boolean isAlive() {
    // Check that the head isn't in the walls
    if (pose.getX() < 0 | 
        pose.getX() >= boardSize | 
        pose.getY() < 0 | 
        pose.getY() >= boardSize) {
      return false;
    }

    // Check that the snake isn't in itself
    var Snake snake;
    let snake = this.getPrevious();
    var boolean isAlive;
    let isAlive = true;
    while(~(snake = null)) {
      if (pose.isEqual(snake.getPose())) {
        return false;
      }
      snake = snake.getPrevious();
      let isAlive = snake.isAlive();
    }
    return isAlive;
  }

  method void updateDirection() {
    var Point diff;
    if (~(behind = null)) {
      let diff = pose.minus(behind.getPose());
      if (diff.getX() > 0 | diff.getY() > 0) {
        let movingPositive = true;
      } else {
        let movingPositive = false;
      }

      if (~(diff.getY() = 0)) {
        let movingVertical = true;
      } else {
        let movingVertical = false;
      }
    }
    return;
  }
}
